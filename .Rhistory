title="The number of approved PPP loans in April 2020 in West Virginia",
x = "date approved",
y = "total loans",
caption = "source: SBA PPP loan database"
)
april_dates %>%
ggplot(aes(x=date_approved, y=total_loans, label=total_loans)) +
geom_point()+
geom_line() +
#geom_text(aes(x=date_approved, y=total_loans)) +
geom_text(aes(label=total_loans, hjust="left")) +
scale_x_date(date_breaks = "1 day", date_labels = "%d-%m-%y") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1)
) +
labs(
title="The number of approved PPP loans in April 2020 in West Virginia",
x = "date approved",
y = "total loans",
caption = "source: SBA PPP loan database"
)
april_dates %>%
ggplot(aes(x=date_approved, y=total_loans, label=total_loans)) +
geom_point()+
geom_line() +
#geom_text(aes(x=date_approved, y=total_loans)) +
geom_text(aes(label=total_loans, hjust="right")) +
scale_x_date(date_breaks = "1 day", date_labels = "%d-%m-%y") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1)
) +
labs(
title="The number of approved PPP loans in April 2020 in West Virginia",
x = "date approved",
y = "total loans",
caption = "source: SBA PPP loan database"
)
april_dates %>%
ggplot(aes(x=date_approved, y=total_loans, label=total_loans)) +
geom_point()+
geom_line() +
#geom_text(aes(x=date_approved, y=total_loans)) +
geom_text(aes(label=total_loans, hjust="right", label.padding)) +
scale_x_date(date_breaks = "1 day", date_labels = "%d-%m-%y") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1)
) +
labs(
title="The number of approved PPP loans in April 2020 in West Virginia",
x = "date approved",
y = "total loans",
caption = "source: SBA PPP loan database"
)
april_dates %>%
ggplot(aes(x=date_approved, y=total_loans, label=total_loans)) +
geom_point()+
geom_line() +
#geom_text(aes(x=date_approved, y=total_loans)) +
geom_text(aes(label=total_loans, hjust="right", label.padding=0.25)) +
scale_x_date(date_breaks = "1 day", date_labels = "%d-%m-%y") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1)
) +
labs(
title="The number of approved PPP loans in April 2020 in West Virginia",
x = "date approved",
y = "total loans",
caption = "source: SBA PPP loan database"
)
april_dates %>%
ggplot(aes(x=date_approved, y=total_loans, label=total_loans)) +
geom_point()+
geom_line() +
#geom_text(aes(x=date_approved, y=total_loans)) +
geom_text(aes(label=total_loans, hjust="right", label.padding=0.5)) +
scale_x_date(date_breaks = "1 day", date_labels = "%d-%m-%y") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1)
) +
labs(
title="The number of approved PPP loans in April 2020 in West Virginia",
x = "date approved",
y = "total loans",
caption = "source: SBA PPP loan database"
)
april_dates %>%
ggplot(aes(x=date_approved, y=total_loans, label=total_loans)) +
geom_point()+
geom_line() +
#geom_text(aes(x=date_approved, y=total_loans)) +
geom_text(aes(label=total_loans, hjust="right", label.padding=1)) +
scale_x_date(date_breaks = "1 day", date_labels = "%d-%m-%y") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1)
) +
labs(
title="The number of approved PPP loans in April 2020 in West Virginia",
x = "date approved",
y = "total loans",
caption = "source: SBA PPP loan database"
)
april_dates %>%
ggplot(aes(x=date_approved, y=total_loans, label=total_loans)) +
geom_point()+
geom_line() +
#geom_text(aes(x=date_approved, y=total_loans)) +
geom_text(aes(label=total_loans, hjust="right", label.padding=5)) +
scale_x_date(date_breaks = "1 day", date_labels = "%d-%m-%y") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1)
) +
labs(
title="The number of approved PPP loans in April 2020 in West Virginia",
x = "date approved",
y = "total loans",
caption = "source: SBA PPP loan database"
)
april_dates %>%
ggplot(aes(x=date_approved, y=total_loans, label=total_loans)) +
geom_point()+
geom_line() +
#geom_text(aes(x=date_approved, y=total_loans)) +
geom_text(aes(label=total_loans, hjust="right")) +
scale_x_date(date_breaks = "1 day", date_labels = "%d-%m-%y") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1)
) +
labs(
title="The number of approved PPP loans in April 2020 in West Virginia",
x = "date approved",
y = "total loans",
caption = "source: SBA PPP loan database"
)
less_than_25 <-wv_ppp_loans %>%
filter(amount < 25000) %>%
less_than_25 <-wv_ppp_loans %>%
filter(amount < 25000)
wv_ppp_loans %>%
filter(amount < 25000) %>%
replace_na(amount, 0)
replace_na(less_than_25, 0)
less_than_25 <- wv_ppp_loans %>%
filter(amount < 25000) %>%
less_than_25 <- wv_ppp_loans %>%
filter(amount < 25000)
replace_na(less_than_25, 0)
less_than_25 %>%
replace_na(list(x = 0, y = "unknown")
less_than_25 %>%
replace_na(list(x = 0, y = "unknown")
View(less_than_25)
less_than_25$amount[is.na(less_than_25$amount)]=0
View(less_than_25)
less_than_25 <- wv_ppp_loans %>%
filter(amount < 25000)
new <- less_than_25$amount[is.na(less_than_25$amount)]=0
less_than_25 <- wv_ppp_loans %>%
filter(amount < 25000)
check <- less_than_25
less_than_25$amount[is.na(less_than_25$amount)]=0
View(check)
less_than_25$forgiveness_amount[is.na(less_than_25$forgiveness_amount)]=0
View(less_than_25)
less_than_25$forgiveness_amount[is.na(less_than_25$forgiveness_amount)]=0.0
less_than_25 %>%
ggplot() +
geom_point(aes(x=amount, y=forgiveness_amount))
less_than_25 %>%
ggplot() +
geom_point(aes(x=amount, y=forgiveness_amount)) +
labs(
title="The amount loans were forgiven in West Virginia",
x = "amount",
y = "forgivness amount",
caption = "source: SBA PPP loan database"
)
setwd("~/OneDrive - University of Maryland/reu work")
cleaned_data <-read_sav("cleaned_data.sav")
library(haven)
cleaned_data <-read_sav("cleaned_data.sav")
View(cleaned_data)
C-RDS <- cleaned_data %>%
select(CRDS_1, CRDS_2, CRDS_3, CRDS_4, CRDS_5, CRDS_6, CRDS_7, CRDS_8, CRDS_9, CRDS_10, CRDS_11, CRDS_12, CRDS_13,
CRDS_14, CRDS_15, CRDS_16, CRDS_17, CRDS_18, CRDS_19)
library(tidyverse)
C-RDS <- cleaned_data %>%
select(CRDS_1, CRDS_2, CRDS_3, CRDS_4, CRDS_5, CRDS_6, CRDS_7, CRDS_8, CRDS_9, CRDS_10, CRDS_11, CRDS_12, CRDS_13,
CRDS_14, CRDS_15, CRDS_16, CRDS_17, CRDS_18, CRDS_19)
CRDS <- cleaned_data %>%
select(CRDS_1, CRDS_2, CRDS_3, CRDS_4, CRDS_5, CRDS_6, CRDS_7, CRDS_8, CRDS_9, CRDS_10, CRDS_11, CRDS_12, CRDS_13,
CRDS_14, CRDS_15, CRDS_16, CRDS_17, CRDS_18, CRDS_19)
View(CRDS)
CDRS_check <- CRDS %>%
mutate(score = RDS_1 + CRDS_2 + CRDS_3 + CRDS_4 + CRDS_5 + CRDS_6 + CRDS_7 + CRDS_8 + CRDS_9 + CRDS_10+
CRDS_11 + CRDS_12 + CRDS_13 + CRDS_14 + CRDS_15 + CRDS_16 + CRDS_17 + CRDS_18 + CRDS_19)
CDRS_check <- CRDS %>%
mutate(score = CRDS_1 + CRDS_2 + CRDS_3 + CRDS_4 + CRDS_5 + CRDS_6 + CRDS_7 + CRDS_8 + CRDS_9 + CRDS_10+
CRDS_11 + CRDS_12 + CRDS_13 + CRDS_14 + CRDS_15 + CRDS_16 + CRDS_17 + CRDS_18 + CRDS_19)
View(CDRS_check)
CDRS <- CRDS %>%
mutate(score = CRDS_1 + CRDS_2 + CRDS_3 + CRDS_4 + CRDS_5 + CRDS_6 + CRDS_7 + CRDS_8 + CRDS_9 + CRDS_10+
CRDS_11 + CRDS_12 + CRDS_13 + CRDS_14 + CRDS_15 + CRDS_16 + CRDS_17 + CRDS_18 + CRDS_19)
CDRS_mean <- CDRS %>% mean(score)
CDRS_mean <- mean(CDRS$score)
CDRS_mean
mean(CDRS$score)
class(score)
class(CDRS$score)
CDRS_mean <- (CRDS_1 + CRDS_2 + CRDS_3 + CRDS_4 + CRDS_5 + CRDS_6 + CRDS_7 + CRDS_8 + CRDS_9 + CRDS_10+
CRDS_11 + CRDS_12 + CRDS_13 + CRDS_14 + CRDS_15 + CRDS_16 + CRDS_17 + CRDS_18 + CRDS_19)/19
CDRS_mean <- CDRS %<% (CRDS_1 + CRDS_2 + CRDS_3 + CRDS_4 + CRDS_5 + CRDS_6 + CRDS_7 + CRDS_8 + CRDS_9 + CRDS_10+
CRDS_11 + CRDS_12 + CRDS_13 + CRDS_14 + CRDS_15 + CRDS_16 + CRDS_17 + CRDS_18 + CRDS_19)/19
CDRS_mean <- CDRS %>% (CRDS_1 + CRDS_2 + CRDS_3 + CRDS_4 + CRDS_5 + CRDS_6 + CRDS_7 + CRDS_8 + CRDS_9 + CRDS_10+
CRDS_11 + CRDS_12 + CRDS_13 + CRDS_14 + CRDS_15 + CRDS_16 + CRDS_17 + CRDS_18 + CRDS_19)/19
View(CDRS)
CDRS_mean <- CDRS %>%
mutate(mean = CRDS_1 + CRDS_2 + CRDS_3 + CRDS_4 + CRDS_5 + CRDS_6 + CRDS_7 + CRDS_8 + CRDS_9 + CRDS_10+
CRDS_11 + CRDS_12 + CRDS_13 + CRDS_14 + CRDS_15 + CRDS_16 + CRDS_17 + CRDS_18 + CRDS_19/19)
View(CDRS_mean)
CDRS_mean <- CDRS %>%
mutate(mean = mean(score))
View(CDRS_mean)
CRDS <- CRDS %>%
mutate(score = CRDS_1 + CRDS_2 + CRDS_3 + CRDS_4 + CRDS_5 + CRDS_6 + CRDS_7 + CRDS_8 + CRDS_9 + CRDS_10+
CRDS_11 + CRDS_12 + CRDS_13 + CRDS_14 + CRDS_15 + CRDS_16 + CRDS_17 + CRDS_18 + CRDS_19)
CRDS_mean <- mean(CRDS$score)
mean(CRDS$score, na.rm=TRUE)
CRDS_mean <- mean(CRDS$score, na.rm=TRUE)
write.csv(cleaned_data, "clean_data.csv")
install.packages(apaTables)
install.packages("apaTables")
library("apaTables")
demographics <- read_csv("demographics.csv")
View(demographics)
apa.cor.table(
demographics,
filename = NA,
table.number = NA,
show.conf.interval = TRUE,
show.sig.stars = TRUE,
landscape = TRUE
)
warnings()
apa.aov.table(filename = "demograhics",table.number = 1)
apa.aov.table(lm(Age~Gender,demographics),filename = "demographics.doc",table.number = 1)
summary(demographics)
summary <- summary(demographics)
summary <- as_tibble() %>%
summary(demographics)
summary <- summary(demographics) %>%
as_tibble()
summary <- summary(demographics)
summary
write.csv(summary, file = 'summary.csv')
write.csv(summary, file = 'summary_demographics.csv')
library (readr)
urlfile="https://github.com/nytimes/covid-19-data/blob/master/us-counties-2020.csv"
covid_2020<-read_csv(url(urlfile))
View(covid_2020)
urlfile="https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties-2020.csv"
covid_2020<-read_csv(url(urlfile))
View(covid_2020)
write.csv(covid_2020, file = 'covid_counties_2020.csv')
setwd("~/Documents/GitHub/datavisualization_spring2022/final-project/data")
write.csv(covid_2020, file = 'covid_counties_2020.csv')
urlfile="https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv"
covid_us_states<-read_csv(url(urlfile))
View(covid_us_states)
write.csv(covid_us_states, file = 'covid_states.csv')
knitr::opts_chunk$set(echo = TRUE)
covid_us_states %>%
group_by(date) %>%
summarise(total_cases = n())
covid_us_states %>%
group_by(date) %>%
summarise(total_cases = n(cases))
covid_us_states %>%
group_by(state, date) %>%
summarise(total_cases = n(cases))
covid_us_states %>%
group_by(state, date)
covid_us_states %>%
group_by(date)
covid_us_states %>%
group_by(date) %>%
summarise(total_cases = sum(cases))
case_totals_by_date <- covid_us_states %>%
group_by(date) %>%
summarise(total_cases = sum(cases))
case_totals_by_date <- covid_us_states %>%
group_by(date) %>%
summarise(total_cases = sum(cases))
ggplot()+
geom_line(data=case_totals_by_date)
View(case_totals_by_date)
ggplot()+
geom_line(data=case_totals_by_date, aes(x=date, y=total_cases))
aggregate(covid_us_states["cases"], by=covid_us_states["date"], sum)
write.csv(case_totals_by_date, "case_totals_by_date.csv")
setwd("~/Documents/GitHub/datavisualization_spring2022/final-project/data")
ggplot()+
geom_line(data=case_totals_by_date, aes(x=date, y=total_cases))
setwd("~/Documents/GitHub/data_analysis_project")
setwd("~/Documents/GitHub/data_journalism_2022_spring/labs/lab_12")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(lubridate)
library(ggrepel)
library(sf)
library(tidycensus)
# Turn off scientific notation
options(scipen=999)
wvu_police_incidents <- read_csv("https://raw.githubusercontent.com/dwillis/wvu-projects/master/crime-log/crime_log.csv")
View(wvu_police_incidents)
type(wvu_police_indicents$datetime)
class(wvu_police_incidents$datetime)
wvu_police_incidents %>%
as.Date(datetime)
wvu_police_check <- as.POSIXct(wvu_police_incidents$datetime,
format="%Y-%m-%dT%H:%M" #format time
)
wvu_police_incidents %>%
as.POSIXct(datetime, format="%Y-%m-%dT%H:%M")
wvu_police_incidents %>%
mutate(newdate = as.POSIXct(datetime, format="%Y-%m-%dT%H:%M"))
wvu_police_incidents %>%
mutate(newdate = as.Date(datetime))
wvu_police_incidents %>%
mutate(newdate = as.POSIXct(datetime, format="%Y-%m-%dT%H:%M"))
#wvu_police_incidents %>%
# mutate(newdate = as.POSIXct(datetime, format="%Y-%m-%dT%H:%M"))
wvu_police_incidents %>%
mutate(new_date = mdy_hms(datetime,tz=Sys.timezone()))
wvu_police_incidents %>%
mutate(newdate = as.POSIXlt(datetime, format="%Y-%m-%dT%H:%M"))
#wvu_police_incidents %>%
# mutate(new_date = mdy_hms(datetime,tz=Sys.timezone()))
# wvu_police_incidents %>%
#  mutate(newdate = as.POSIXct(datetime, format="%Y-%m-%dT%H:%M"))
#wvu_police_incidents %>%
# mutate(new_date = mdy_hms(datetime,tz=Sys.timezone()))
wvu_police_incidents %>%
mutate(new_date = as.Date(datetime,'%Y-%m-%d %H:%M:%S')
# wvu_police_incidents %>%
#  mutate(newdate = as.POSIXct(datetime, format="%Y-%m-%dT%H:%M"))
#wvu_police_incidents %>%
# mutate(new_date = mdy_hms(datetime,tz=Sys.timezone()))
wvu_police_incidents %>%
mutate(new_date = as.Date(datetime,'%Y-%m-%d %H:%M:%S'))
# wvu_police_incidents %>%
#  mutate(newdate = as.POSIXct(datetime, format="%Y-%m-%dT%H:%M"))
#wvu_police_incidents %>%
# mutate(new_date = mdy_hms(datetime,tz=Sys.timezone()))
wvu_police_incidents %>%
strptime(datetime,format = "%Y-%m-%d %H:%M:%S")
# wvu_police_incidents %>%
#  mutate(newdate = as.POSIXct(datetime, format="%Y-%m-%dT%H:%M"))
#wvu_police_incidents %>%
# mutate(new_date = mdy_hms(datetime,tz=Sys.timezone()))
wvu_police_incidents %>%
strptime(wvu_police_incidents[datetime],format = "%Y-%m-%d %H:%M:%S")
# wvu_police_incidents %>%
#  mutate(newdate = as.POSIXct(datetime, format="%Y-%m-%dT%H:%M"))
#wvu_police_incidents %>%
# mutate(new_date = mdy_hms(datetime,tz=Sys.timezone()))
strptime(wvu_police_incidents[datetime],format = "%Y-%m-%d %H:%M:%S")
# wvu_police_incidents %>%
#  mutate(newdate = as.POSIXct(datetime, format="%Y-%m-%dT%H:%M"))
#wvu_police_incidents %>%
# mutate(new_date = mdy_hms(datetime,tz=Sys.timezone()))
strptime(wvu_police_incidents[[datetime]],format = "%Y-%m-%d %H:%M:%S")
# wvu_police_incidents %>%
#  mutate(newdate = as.POSIXct(datetime, format="%Y-%m-%dT%H:%M"))
#wvu_police_incidents %>%
# mutate(new_date = mdy_hms(datetime,tz=Sys.timezone()))
strptime(wvu_police_incidents[['datetime']],format = "%Y-%m-%d %H:%M:%S")
wvu_police_incidents %>%
mutate(newdate = as.POSIXct(datetime, format="%Y-%m-%dT%H:%M"))
#wvu_police_incidents %>%
# mutate(new_date = mdy_hms(datetime,tz=Sys.timezone()))
#wvu_police_incidents %>%
# mutate(newdate = as.POSIXct(datetime, format="%Y-%m-%dT%H:%M"))
wvu_police_check <- as.Date(wvu_police_incidents$datetime, format="%Y-%m-%dT%H:%M")
#wvu_police_incidents %>%
# mutate(new_date = mdy_hms(datetime,tz=Sys.timezone()))
#wvu_police_incidents %>%
# mutate(newdate = as.POSIXct(datetime, format="%Y-%m-%dT%H:%M"))
#wvu_police_check <- as.Date(wvu_police_incidents$datetime, format="%Y-%m-%dT%H:%M")
#wvu_police_incidents %>%
# mutate(new_date = mdy_hms(datetime,tz=Sys.timezone()))
wvu_police_incidents %>%
mutate(new_date = as.Date(datetime))
#wvu_police_incidents %>%
# mutate(newdate = as.POSIXct(datetime, format="%Y-%m-%dT%H:%M"))
#wvu_police_check <- as.Date(wvu_police_incidents$datetime, format="%Y-%m-%dT%H:%M")
#wvu_police_incidents %>%
# mutate(new_date = mdy_hms(datetime,tz=Sys.timezone()))
wvu_police_incidents %>%
mutate(new_date = as.Date(datetime, format ="%Y-%m-%dT%H:%M" ))
#wvu_police_incidents %>%
# mutate(newdate = as.POSIXct(datetime, format="%Y-%m-%dT%H:%M"))
#wvu_police_check <- as.Date(wvu_police_incidents$datetime, format="%Y-%m-%dT%H:%M")
#wvu_police_incidents %>%
# mutate(new_date = mdy_hms(datetime,tz=Sys.timezone()))
wvu_police_incidents %>%
mutate(new_date = as.Date(datetime, format ="%Y-%m-%d %T%H:%M"))
#wvu_police_incidents %>%
# mutate(newdate = as.POSIXct(datetime, format="%Y-%m-%dT%H:%M"))
#wvu_police_check <- as.Date(wvu_police_incidents$datetime, format="%Y-%m-%dT%H:%M")
#wvu_police_incidents %>%
# mutate(new_date = mdy_hms(datetime,tz=Sys.timezone()))
wvu_police_incidents %>%
mutate(new_date = as.Date(datetime, format ="%Y-%m-%d%H:%M"))
#wvu_police_incidents %>%
# mutate(newdate = as.POSIXct(datetime, format="%Y-%m-%dT%H:%M"))
#wvu_police_check <- as.Date(wvu_police_incidents$datetime, format="%Y-%m-%dT%H:%M")
#wvu_police_incidents %>%
# mutate(new_date = mdy_hms(datetime,tz=Sys.timezone()))
wvu_police_incidents %>%
mutate(new_date = mdy_hms(datetime))
#wvu_police_incidents %>%
# mutate(newdate = as.POSIXct(datetime, format="%Y-%m-%dT%H:%M"))
#wvu_police_check <- as.Date(wvu_police_incidents$datetime, format="%Y-%m-%dT%H:%M")
#wvu_police_incidents %>%
# mutate(new_date = mdy_hms(datetime,tz=Sys.timezone()))
wvu_police_incidents %>%
mutate(new_date = as.Date(datetime, format ="%Y-%m-%d %H:%M"))
#wvu_police_incidents %>%
# mutate(newdate = as.POSIXct(datetime, format="%Y-%m-%dT%H:%M"))
#wvu_police_check <- as.Date(wvu_police_incidents$datetime, format="%Y-%m-%dT%H:%M")
#wvu_police_incidents %>%
# mutate(new_date = mdy_hms(datetime,tz=Sys.timezone()))
wvu_police_incidents %>%
mutate(new_date = as_datetime(datetime, format ="%Y-%m-%d %H:%M"))
#wvu_police_incidents %>%
# mutate(newdate = as.POSIXct(datetime, format="%Y-%m-%dT%H:%M"))
#wvu_police_check <- as.Date(wvu_police_incidents$datetime, format="%Y-%m-%dT%H:%M")
#wvu_police_incidents %>%
# mutate(new_date = mdy_hms(datetime,tz=Sys.timezone()))
wvu_police_incidents %>%
(newdate = date(mdy_hms(datetime)))
knitr::opts_chunk$set(echo = TRUE)
county_vaccinations_by_date <- read_csv("https://raw.githubusercontent.com/state-of-maryland/VaccineCSVs/master/MD_COVID19_TotalVaccinationsCountyFirstandSecondSingleDose.csv") %>%
clean_names()
View(county_vaccinations_by_date)
county_vaccinations_by_date_2 <- county_vaccinations_by_date %>%
mutate(vaccination_date = date(mdy_hms(vaccination_date)))
View(county_vaccinations_by_date)
View(county_vaccinations_by_date_2)
#wvu_police_incidents %>%
# mutate(newdate = as.POSIXct(datetime, format="%Y-%m-%dT%H:%M"))
#wvu_police_check <- as.Date(wvu_police_incidents$datetime, format="%Y-%m-%dT%H:%M")
#wvu_police_incidents %>%
# mutate(new_date = mdy_hms(datetime,tz=Sys.timezone()))
wvu_police_incidents %>%
mutate(newdate = date(mdy_hms(datetime)))
#wvu_police_incidents %>%
# mutate(newdate = as.POSIXct(datetime, format="%Y-%m-%dT%H:%M"))
#wvu_police_check <- as.Date(wvu_police_incidents$datetime, format="%Y-%m-%dT%H:%M")
#wvu_police_incidents %>%
# mutate(new_date = mdy_hms(datetime,tz=Sys.timezone()))
wvu_police_incidents %>%
mutate(new_date = as_datetime(datetime)
#wvu_police_incidents %>%
# mutate(newdate = as.POSIXct(datetime, format="%Y-%m-%dT%H:%M"))
#wvu_police_check <- as.Date(wvu_police_incidents$datetime, format="%Y-%m-%dT%H:%M")
#wvu_police_incidents %>%
# mutate(new_date = mdy_hms(datetime,tz=Sys.timezone()))
wvu_police_incidents %>%
mutate(new_date = as_datetime(datetime))
#wvu_police_incidents %>%
# mutate(newdate = as.POSIXct(datetime, format="%Y-%m-%dT%H:%M"))
#wvu_police_check <- as.Date(wvu_police_incidents$datetime, format="%Y-%m-%dT%H:%M")
#wvu_police_incidents %>%
# mutate(new_date = mdy_hms(datetime,tz=Sys.timezone()))
wvu_police_incidents %>%
mutate(new_date = as_datetime(datetime, format ="%Y-%m-%d %H:%M"))
setwd("~/Documents/GitHub/data_analysis_project")
knitr::opts_chunk$set(echo = TRUE)
# Load required data
sf_data <- read_csv("data/SF/sf_all_years.csv")
dc_data <- read_csv("data/DC/dc_all_years.csv")
View(dc_data)
knitr::opts_chunk$set(echo = TRUE)
bartenders <- dc_all_years %>%
filter(occ_title== "Bartenders") %>%
group_by(year) %>%
summarise(
h_pct10,
h_pct25,
h_median,
h_pct75,
h_pct90,
h_mean,
tot_emp
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
state_may_2010 <- read_csv("data/state_csv/state_may_2010.csv")
# Load required data
sf_data <- read_csv("data/SF/sf_all_years.csv")
dc_data <- read_csv("data/DC/dc_all_years.csv")
# Load required data
sf_all_years <- read_csv("data/SF/sf_all_years.csv")
dc_all_years <- read_csv("data/DC/dc_all_years.csv")
sea_all_years
# Load required data
sf_all_years <- read_csv("data/SF/sf_all_years.csv")
dc_all_years <- read_csv("data/DC/dc_all_years.csv")
sea_all_years <- read_csv("date/SEA/sea_all_years.csv")
